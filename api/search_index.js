var search_data = {
    'index': {
        'searchIndex': ["league","league\\factorymuffin","league\\factorymuffin\\exceptions","league\\factorymuffin\\generators","league\\factorymuffin\\exceptions\\deletefailedexception","league\\factorymuffin\\exceptions\\deletemethodnotfoundexception","league\\factorymuffin\\exceptions\\deletingfailedexception","league\\factorymuffin\\exceptions\\directorynotfoundexception","league\\factorymuffin\\exceptions\\methodnotfoundexception","league\\factorymuffin\\exceptions\\modelexception","league\\factorymuffin\\exceptions\\nodefinedfactoryexception","league\\factorymuffin\\exceptions\\savefailedexception","league\\factorymuffin\\exceptions\\savemethodnotfoundexception","league\\factorymuffin\\facade","league\\factorymuffin\\factory","league\\factorymuffin\\generators\\base","league\\factorymuffin\\generators\\call","league\\factorymuffin\\generators\\closure","league\\factorymuffin\\generators\\factory","league\\factorymuffin\\generators\\generic","league\\factorymuffin\\exceptions\\deletefailedexception::__construct","league\\factorymuffin\\exceptions\\deletemethodnotfoundexception::__construct","league\\factorymuffin\\exceptions\\deletemethodnotfoundexception::getobject","league\\factorymuffin\\exceptions\\deletingfailedexception::__construct","league\\factorymuffin\\exceptions\\deletingfailedexception::getexceptions","league\\factorymuffin\\exceptions\\directorynotfoundexception::__construct","league\\factorymuffin\\exceptions\\directorynotfoundexception::getpath","league\\factorymuffin\\exceptions\\methodnotfoundexception::__construct","league\\factorymuffin\\exceptions\\methodnotfoundexception::getmethod","league\\factorymuffin\\exceptions\\modelexception::__construct","league\\factorymuffin\\exceptions\\modelexception::getmodel","league\\factorymuffin\\exceptions\\nodefinedfactoryexception::__construct","league\\factorymuffin\\exceptions\\savefailedexception::__construct","league\\factorymuffin\\exceptions\\savefailedexception::geterrors","league\\factorymuffin\\exceptions\\savemethodnotfoundexception::__construct","league\\factorymuffin\\exceptions\\savemethodnotfoundexception::getobject","league\\factorymuffin\\facade::__callstatic","league\\factorymuffin\\factory::setfakerlocale","league\\factorymuffin\\factory::setsavemethod","league\\factorymuffin\\factory::setdeletemethod","league\\factorymuffin\\factory::seed","league\\factorymuffin\\factory::create","league\\factorymuffin\\factory::saved","league\\factorymuffin\\factory::issaved","league\\factorymuffin\\factory::deletesaved","league\\factorymuffin\\factory::instance","league\\factorymuffin\\factory::attributesfor","league\\factorymuffin\\factory::define","league\\factorymuffin\\factory::generateattr","league\\factorymuffin\\factory::loadfactories","league\\factorymuffin\\generators\\base::__construct","league\\factorymuffin\\generators\\base::detect","league\\factorymuffin\\generators\\base::getoptions","league\\factorymuffin\\generators\\base::generate","league\\factorymuffin\\generators\\call::generate","league\\factorymuffin\\generators\\closure::generate","league\\factorymuffin\\generators\\factory::generate","league\\factorymuffin\\generators\\generic::generate"],
        'info': [["League","","League.html","","",3],["League\\FactoryMuffin","","League\/FactoryMuffin.html","","",3],["League\\FactoryMuffin\\Exceptions","","League\/FactoryMuffin\/Exceptions.html","","",3],["League\\FactoryMuffin\\Generators","","League\/FactoryMuffin\/Generators.html","","",3],["DeleteFailedException","League\\FactoryMuffin\\Exceptions","League\/FactoryMuffin\/Exceptions\/DeleteFailedException.html"," < ModelException","This is the delete failed exception class.",1],["DeleteMethodNotFoundException","League\\FactoryMuffin\\Exceptions","League\/FactoryMuffin\/Exceptions\/DeleteMethodNotFoundException.html"," < MethodNotFoundException","This is the delete method not found exception class.",1],["DeletingFailedException","League\\FactoryMuffin\\Exceptions","League\/FactoryMuffin\/Exceptions\/DeletingFailedException.html"," < Exception","This is the deleting failed exception class.",1],["DirectoryNotFoundException","League\\FactoryMuffin\\Exceptions","League\/FactoryMuffin\/Exceptions\/DirectoryNotFoundException.html"," < Exception","This is the directory not found exception class.",1],["MethodNotFoundException","League\\FactoryMuffin\\Exceptions","League\/FactoryMuffin\/Exceptions\/MethodNotFoundException.html"," < ModelException","This is the method not found exception class.",1],["ModelException","League\\FactoryMuffin\\Exceptions","League\/FactoryMuffin\/Exceptions\/ModelException.html"," < Exception","This is the model exception class.",1],["NoDefinedFactoryException","League\\FactoryMuffin\\Exceptions","League\/FactoryMuffin\/Exceptions\/NoDefinedFactoryException.html"," < ModelException","This is the no defined factory exception class.",1],["SaveFailedException","League\\FactoryMuffin\\Exceptions","League\/FactoryMuffin\/Exceptions\/SaveFailedException.html"," < ModelException","This is the save failed exception class.",1],["SaveMethodNotFoundException","League\\FactoryMuffin\\Exceptions","League\/FactoryMuffin\/Exceptions\/SaveMethodNotFoundException.html"," < MethodNotFoundException","This is the save method not found exception class.",1],["Facade","League\\FactoryMuffin","League\/FactoryMuffin\/Facade.html","","This is the facade class.",1],["Factory","League\\FactoryMuffin","League\/FactoryMuffin\/Factory.html","","This is the factory class.",1],["Base","League\\FactoryMuffin\\Generators","League\/FactoryMuffin\/Generators\/Base.html","","This is the abstract base generator class.",1],["Call","League\\FactoryMuffin\\Generators","League\/FactoryMuffin\/Generators\/Call.html"," < Base","This is the call generator class.",1],["Closure","League\\FactoryMuffin\\Generators","League\/FactoryMuffin\/Generators\/Closure.html"," < Base","This is the closure generator class.",1],["Factory","League\\FactoryMuffin\\Generators","League\/FactoryMuffin\/Generators\/Factory.html"," < Base","This is the factory generator class.",1],["Generic","League\\FactoryMuffin\\Generators","League\/FactoryMuffin\/Generators\/Generic.html"," < Base","This is the generic generator class.",1],["DeleteFailedException::__construct","League\\FactoryMuffin\\Exceptions\\DeleteFailedException","League\/FactoryMuffin\/Exceptions\/DeleteFailedException.html#method___construct","(string $model, string|null $message = null)","Create a new instance.",2],["DeleteMethodNotFoundException::__construct","League\\FactoryMuffin\\Exceptions\\DeleteMethodNotFoundException","League\/FactoryMuffin\/Exceptions\/DeleteMethodNotFoundException.html#method___construct","(object $object, string $method, string|null $message = null)","Create a new instance.",2],["DeleteMethodNotFoundException::getObject","League\\FactoryMuffin\\Exceptions\\DeleteMethodNotFoundException","League\/FactoryMuffin\/Exceptions\/DeleteMethodNotFoundException.html#method_getObject","()","Get the model instance.",2],["DeletingFailedException::__construct","League\\FactoryMuffin\\Exceptions\\DeletingFailedException","League\/FactoryMuffin\/Exceptions\/DeletingFailedException.html#method___construct","(array $exceptions, string|null $message = null)","Create a new instance.",2],["DeletingFailedException::getExceptions","League\\FactoryMuffin\\Exceptions\\DeletingFailedException","League\/FactoryMuffin\/Exceptions\/DeletingFailedException.html#method_getExceptions","()","Get the array of exceptions.",2],["DirectoryNotFoundException::__construct","League\\FactoryMuffin\\Exceptions\\DirectoryNotFoundException","League\/FactoryMuffin\/Exceptions\/DirectoryNotFoundException.html#method___construct","(string $path, string|null $message = null)","Create a new instance.",2],["DirectoryNotFoundException::getPath","League\\FactoryMuffin\\Exceptions\\DirectoryNotFoundException","League\/FactoryMuffin\/Exceptions\/DirectoryNotFoundException.html#method_getPath","()","Get the path.",2],["MethodNotFoundException::__construct","League\\FactoryMuffin\\Exceptions\\MethodNotFoundException","League\/FactoryMuffin\/Exceptions\/MethodNotFoundException.html#method___construct","(string $model, string $method, string|null $message = null)","Create a new instance.",2],["MethodNotFoundException::getMethod","League\\FactoryMuffin\\Exceptions\\MethodNotFoundException","League\/FactoryMuffin\/Exceptions\/MethodNotFoundException.html#method_getMethod","()","Get the method.",2],["ModelException::__construct","League\\FactoryMuffin\\Exceptions\\ModelException","League\/FactoryMuffin\/Exceptions\/ModelException.html#method___construct","(string $model, string $message)","Create a new instance.",2],["ModelException::getModel","League\\FactoryMuffin\\Exceptions\\ModelException","League\/FactoryMuffin\/Exceptions\/ModelException.html#method_getModel","()","Get the model.",2],["NoDefinedFactoryException::__construct","League\\FactoryMuffin\\Exceptions\\NoDefinedFactoryException","League\/FactoryMuffin\/Exceptions\/NoDefinedFactoryException.html#method___construct","(string $model, string|null $message = null)","Create a new instance.",2],["SaveFailedException::__construct","League\\FactoryMuffin\\Exceptions\\SaveFailedException","League\/FactoryMuffin\/Exceptions\/SaveFailedException.html#method___construct","(string $model, string|null $errors = null, string|null $message = null)","Create a new instance.",2],["SaveFailedException::getErrors","League\\FactoryMuffin\\Exceptions\\SaveFailedException","League\/FactoryMuffin\/Exceptions\/SaveFailedException.html#method_getErrors","()","Get the errors.",2],["SaveMethodNotFoundException::__construct","League\\FactoryMuffin\\Exceptions\\SaveMethodNotFoundException","League\/FactoryMuffin\/Exceptions\/SaveMethodNotFoundException.html#method___construct","(object $object, string $method, string|null $message = null)","Create a new instance.",2],["SaveMethodNotFoundException::getObject","League\\FactoryMuffin\\Exceptions\\SaveMethodNotFoundException","League\/FactoryMuffin\/Exceptions\/SaveMethodNotFoundException.html#method_getObject","()","Get the model instance.",2],["Facade::__callStatic","League\\FactoryMuffin\\Facade","League\/FactoryMuffin\/Facade.html#method___callStatic","(string $method, array $args)","Handle dynamic, static calls to the object.",2],["Factory::setFakerLocale","League\\FactoryMuffin\\Factory","League\/FactoryMuffin\/Factory.html#method_setFakerLocale","(string $local)","Set the faker locale.",2],["Factory::setSaveMethod","League\\FactoryMuffin\\Factory","League\/FactoryMuffin\/Factory.html#method_setSaveMethod","(string $method)","Set the method we use when saving objects.",2],["Factory::setDeleteMethod","League\\FactoryMuffin\\Factory","League\/FactoryMuffin\/Factory.html#method_setDeleteMethod","(string $method)","Set the method we use when deleting objects.",2],["Factory::seed","League\\FactoryMuffin\\Factory","League\/FactoryMuffin\/Factory.html#method_seed","(int $times, string $model, array $attr = array())","Returns multiple versions of an object.",2],["Factory::create","League\\FactoryMuffin\\Factory","League\/FactoryMuffin\/Factory.html#method_create","(string $model, array $attr = array())","Creates and saves in db an instance of the model.",2],["Factory::saved","League\\FactoryMuffin\\Factory","League\/FactoryMuffin\/Factory.html#method_saved","()","Return an array of saved objects.",2],["Factory::isSaved","League\\FactoryMuffin\\Factory","League\/FactoryMuffin\/Factory.html#method_isSaved","(object $object)","Is the object saved?",2],["Factory::deleteSaved","League\\FactoryMuffin\\Factory","League\/FactoryMuffin\/Factory.html#method_deleteSaved","()","Call the delete method on any saved objects.",2],["Factory::instance","League\\FactoryMuffin\\Factory","League\/FactoryMuffin\/Factory.html#method_instance","(string $model, array $attr = array())","Return an instance of the model.",2],["Factory::attributesFor","League\\FactoryMuffin\\Factory","League\/FactoryMuffin\/Factory.html#method_attributesFor","(object $object, array $attr = array())","Returns the mock attributes for the model.",2],["Factory::define","League\\FactoryMuffin\\Factory","League\/FactoryMuffin\/Factory.html#method_define","(string $model, array $definition = array())","Define a new model factory.",2],["Factory::generateAttr","League\\FactoryMuffin\\Factory","League\/FactoryMuffin\/Factory.html#method_generateAttr","(string $kind, object|null $object = null)","Generate the attributes.",2],["Factory::loadFactories","League\\FactoryMuffin\\Factory","League\/FactoryMuffin\/Factory.html#method_loadFactories","(string|string[] $paths)","Load the specified factories.",2],["Base::__construct","League\\FactoryMuffin\\Generators\\Base","League\/FactoryMuffin\/Generators\/Base.html#method___construct","(string $kind, object|null $object = null, <abbr title=\"Faker\\Generator\">Generator<\/abbr>|null $faker = null)","Initialise our Generator.",2],["Base::detect","League\\FactoryMuffin\\Generators\\Base","League\/FactoryMuffin\/Generators\/Base.html#method_detect","(string $kind, object|null $object = null, <abbr title=\"Faker\\Generator\">Generator<\/abbr>|null $faker = null)","Detect the type of Generator we are processing.",2],["Base::getOptions","League\\FactoryMuffin\\Generators\\Base","League\/FactoryMuffin\/Generators\/Base.html#method_getOptions","()","Return an array of all options passed to the Generator",2],["Base::generate","League\\FactoryMuffin\\Generators\\Base","League\/FactoryMuffin\/Generators\/Base.html#method_generate","()","Generate, and return the attribute.",2],["Call::generate","League\\FactoryMuffin\\Generators\\Call","League\/FactoryMuffin\/Generators\/Call.html#method_generate","()","Generate, and return the attribute.",2],["Closure::generate","League\\FactoryMuffin\\Generators\\Closure","League\/FactoryMuffin\/Generators\/Closure.html#method_generate","()","Generate, and return the attribute.",2],["Factory::generate","League\\FactoryMuffin\\Generators\\Factory","League\/FactoryMuffin\/Generators\/Factory.html#method_generate","()","Return generated data.",2],["Generic::generate","League\\FactoryMuffin\\Generators\\Generic","League\/FactoryMuffin\/Generators\/Generic.html#method_generate","()","Generate, and return the attribute.",2]]
    }
}
search_data['index']['longSearchIndex'] = search_data['index']['searchIndex']